pipeline {
    agent any
    environment{
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    }
    stages {
        stage('SonarQube analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarkey', variable: 'SonarToken')]) {
                    script{
                        def scannerHome = tool 'sonar';
                        withSonarQubeEnv("sonar"){
                            sh "${scannerHome}/bin/sonar-scanner -Dsonar.host.url=http://192.168.1.52:8500 -Dsonar.projectKey=hammad -Dsonar.projectName=hammad -Dsonar.login=${SonarToken}"
                        }
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    // Check SonarQube Quality Gate status
                    def qualityGate = waitForQualityGate() 
                    if (qualityGate.status != 'OK') {
                        error "Pipeline aborted due to Quality Gate failure: ${qualityGate.status}"
                    }
                }
            }
        }

        stage('Docker Build') {
            steps{
                script{
                sh "docker build -f Dockerfile -t hammadkdys/node:$BUILD_NUMBER ."
            }
            }
        }

        stage('Docker Login') {
            steps{
                script{
                sh "echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u DOCKERHUB_CREDENTIALS_USR --password-stdin"
            }
            }
        }

        stage('Docker Upload') {
            steps{
                script{
                sh "docker push hammadkdys/node:$BUILD_NUMBER"
            }
            }
        }
    }
}

